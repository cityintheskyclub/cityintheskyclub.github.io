{"version":3,"file":"js/955.d212b01e.js","mappings":"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","sources":["webpack://betly-dapp/./src/components/swapAlert.vue","webpack://betly-dapp/./src/components/swapAlert.vue?6f3c","webpack://betly-dapp/./src/views/NFT/components/notice.vue","webpack://betly-dapp/./src/views/NFT/components/nftList.vue","webpack://betly-dapp/./src/views/NFT/components/nftList.vue?5108","webpack://betly-dapp/./src/views/NFT/components/sellList.vue","webpack://betly-dapp/./src/views/NFT/components/sellList.vue?59d6","webpack://betly-dapp/./src/views/NFT/index.vue","webpack://betly-dapp/./src/views/NFT/index.vue?ebc4"],"sourcesContent":["<script setup>\nimport { ref, reactive, toRefs } from \"vue\";\nimport popupTitle from \"@/components/popupTitle.vue\";\nimport { commonStore } from \"@/store/common\";\nimport useClipboard from \"vue-clipboard3\";\nimport { Toast } from \"vant\";\nimport loadingIcon from \"./loadingIcon.vue\";\n\nconst props = defineProps({\n  finish: Boolean,\n  success: Boolean,\n  hash: String,\n  type: String,\n  text: String,\n  title: String,\n  btn: String,\n  empowerText: String,\n  empower: Boolean,\n  check: Boolean,\n});\n\nconst { hash } = toRefs(props);\nconst emit = defineEmits([\"closeFn\", \"empowerFn\", \"submit\"]);\nconst common_store = commonStore();\nconst { toClipboard } = useClipboard();\n</script>\n<template>\n  <div class=\"bind allFlex column\">\n    <span\n      class=\"success-btn Wcolor font-Two\"\n      :class=\"[success ? 'btnBg' : 'redBg']\"\n      v-show=\"finish\"\n      >{{ success ? $t(\"success\") : $t(\"fail\") }}</span\n    >\n    <loading-icon class=\"loading\" v-show=\"!finish && check\"></loading-icon>\n    <p class=\"popup-title Wcolor font-Eight font500 center\">\n      {{ $t(title) }}\n    </p>\n    <div class=\"bind_ipt center Wcolor\" v-if=\"!finish\">\n      <slot></slot>\n    </div>\n\n    <div\n      class=\"bind_ipt bgPadding center\"\n      :class=\"[success ? 'mainColor font-Ty' : 'redColor hashFont font-Four']\"\n      v-if=\"finish\"\n    >\n      {{ success ? $t(text) : hash }}\n    </div>\n    <div class=\"bgPadding flex_between\">\n      <van-button\n        type=\"primary\"\n        block\n        v-if=\"!empower\"\n        :disabled=\"check\"\n        class=\"font-Three\"\n        @click=\"$emit('empowerFn')\"\n        >{{ $t(empowerText) }}</van-button\n      >\n      <van-button\n        class=\"btn font-Three\"\n        type=\"primary\"\n        :disabled=\"!empower || check\"\n        block\n        @click=\"$emit('submit')\"\n        v-show=\"!finish\"\n        >{{ $t(btn) }}</van-button\n      >\n      <van-button\n        class=\"btn font-Three\"\n        :type=\"success ? 'primary' : 'danger'\"\n        block\n        v-show=\"finish\"\n        @click=\"$emit('closeFn')\"\n        >{{ $t(\"SwapAlert.close\") }}</van-button\n      >\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.popup-title {\n  position: relative;\n  height: 50px;\n  line-height: 50px;\n}\n.bind {\n  width: 90vw;\n  height: 250px;\n  background: url(\"../assets/commonImg/alert-bg1.png\") no-repeat;\n  background-size: 100% 100%;\n  position: relative;\n  padding: 4px 4px 30px 4px;\n  &_ipt {\n    text-overflow: ellipsis;\n    word-break: break-all;\n    padding: 15px;\n    line-height: 30px;\n    max-height: 120px;\n    overflow-y: scroll;\n  }\n}\n.loading {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n}\n.success-btn {\n  padding: 2px 6px;\n  border-radius: 4px;\n  transform: scale(0.8);\n  position: absolute;\n  top: 15px;\n  right: 10px;\n}\n.btn {\n  margin-left: 10px;\n}\n</style>\n","import script from \"./swapAlert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./swapAlert.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./swapAlert.vue?vue&type=style&index=0&id=58a1f06e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/data/repos/1_20230106200100/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-58a1f06e\"]])\n\nexport default __exports__","import script from \"./notice.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./notice.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./notice.vue?vue&type=style&index=0&id=2d0bb429&lang=scss&scoped=true\"\n\nimport exportComponent from \"/data/repos/1_20230106200100/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2d0bb429\"]])\n\nexport default __exports__","<script setup>\nimport { ref, reactive, toRefs } from 'vue';\nimport pixelItem from '@/components/pixelItem.vue';\n\nimport { useRouter } from 'vue-router';\nimport { commonStore } from '@/store/common';\nconst common_store = commonStore();\nconst props = defineProps({\n  list: Array,\n  counts: Array,\n  type: String,\n  countTime: Array,\n});\n\nconst { type, countTime } = toRefs(props);\nconst router = useRouter();\nconst emit = defineEmits(['toSell']);\nconst toDetails = (item, key) => {\n  if (type.value == 'hasBuy') {\n    return;\n  }\n  const params = {\n    color: item.color - 1,\n    index: item.index,\n    tokenid: item?.tokenid || item?.tokenId,\n    canvasid: item.canvasid,\n    type_: item.type_,\n    endDate: countTime.value[key],\n    // times,\n  };\n  router.push({\n    path: '/nftDetails',\n    query: params,\n  });\n};\nconst toSell = (id) => {\n  emit('toSell', id);\n};\n</script>\n<template>\n  <div class=\"nft-list padding flex_between\">\n    <pixel-item\n      v-for=\"(item, key) in list\"\n      :key=\"key\"\n      :pixelInfo=\"item\"\n      name=\"nft\"\n      btnType=\"primary\"\n      btnText=\"NFT.sell\"\n      :type=\"type\"\n      :endDate=\"countTime[key]\"\n      @toSell=\"toSell\"\n      :count=\"counts[key]\"\n      @click.stop=\"toDetails(item, key)\"\n    ></pixel-item>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.nft-list {\n  flex-wrap: wrap;\n}\n</style>\n","import script from \"./nftList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./nftList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./nftList.vue?vue&type=style&index=0&id=4dbec983&lang=scss&scoped=true\"\n\nimport exportComponent from \"/data/repos/1_20230106200100/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4dbec983\"]])\n\nexport default __exports__","<script setup>\nimport { ref, reactive } from 'vue';\nimport pixelItem from '@/components/pixelItem.vue';\nimport { useRouter } from 'vue-router';\ndefineProps({\n  list: Array,\n  counts: Array,\n  type: String,\n});\nconst router = useRouter();\nconst toDetails = (item, times) => {\n  const params = {\n    color: item.color,\n    index: item.index,\n    tokenid: item?.tokenid || item?.tokenId,\n    canvasid: item.canvasid,\n    times,\n  };\n  router.push({\n    path: '/nftDetails',\n    query: params,\n  });\n};\nconst emit = defineEmits(['toCancel']);\nconst toCancel = (id, tokenId) => {\n  emit('toCancel', id, tokenId);\n};\n</script>\n<template>\n  <div class=\"nft-list padding flex_between\">\n    <pixel-item\n      v-for=\"(item, key) in list\"\n      :key=\"key\"\n      :pixelInfo=\"item\"\n      name=\"nft\"\n      btnType=\"primary\"\n      btnText=\"NFT.cancel\"\n      :type=\"type\"\n      :count=\"counts[key]\"\n      @toCancel=\"toCancel\"\n      @click.stop=\"\"\n    ></pixel-item>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.nft-list {\n  flex-wrap: wrap;\n}\n</style>\n","import script from \"./sellList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./sellList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./sellList.vue?vue&type=style&index=0&id=3bc38ab5&lang=scss&scoped=true\"\n\nimport exportComponent from \"/data/repos/1_20230106200100/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3bc38ab5\"]])\n\nexport default __exports__","<script setup>\nimport { ref, reactive, onBeforeMount, watchEffect, watch } from 'vue';\nimport notice from './components/notice.vue';\nimport nftList from './components/nftList.vue';\nimport sellList from './components/sellList.vue';\nimport swapAlert from '@/components/swapAlert.vue';\nimport { commonStore } from '@/store/common';\nimport { Toast } from 'vant';\nimport { getUserSell } from '@/http/api';\n\nconst common_store = commonStore();\nconst data = reactive({\n  holdList: [],\n  sellList: [],\n  allList: [],\n  active: 0,\n  counts: [],\n  sellCounts: [],\n  allCounts: [],\n  countTime: [],\n  loading: true,\n  finished: false,\n  page: 0,\n  empower: false,\n  empowerText: 'EmpowerAlert.btn2',\n  check: false,\n});\nconst swapData = reactive({\n  alertShow: false,\n  finish: false,\n  success: false,\n  hash: '',\n  tokenid: '',\n  id: '',\n  hashType: 'cancel',\n});\nconst getHoldList = async () => {\n  data.loading = true;\n  try {\n    data.holdList = await common_store.allMethods\n      .getUserPixel(common_store.address)\n      .call();\n    data.loading = false;\n    common_store.setLoading(false);\n    const tokenArr = [];\n    data.holdList = data.holdList.map((item) => {\n      return { ...item, id: item.index };\n    });\n    console.log(data.holdList);\n\n    data.holdList.forEach((item) => {\n      item.id = item.index;\n      const tokenid = item?.tokenid || item?.tokenId;\n      tokenArr.push(tokenid);\n    });\n    getSellTimes(0, tokenArr);\n  } catch (error) {\n    Toast(error);\n  }\n};\nconst getSellTimes = async (num, tokenArr) => {\n  const res = await common_store.marketMethods.listNftCount(tokenArr).call();\n\n  if (num == 0) {\n    data.counts = data.counts.concat(res.counts_);\n    data.countTime = data.countTime.concat(res.times_);\n  } else if (num == 1) {\n    data.sellCounts = data.sellCounts.concat(res.counts_);\n  } else {\n    data.allCounts = data.allCounts.concat(res.counts_);\n  }\n};\nconst getSellList = () => {\n  getUserSell(common_store.address, data.page).then((res) => {\n    data.loading = false;\n    common_store.setLoading(false);\n    const list = res.data.results;\n    data.sellList = data.sellList.concat(list);\n    data.finished = list.length < 20;\n    const tokenArr = [];\n    data.sellList.forEach((item) => {\n      tokenArr.push(item.tokenId);\n    });\n    data.sellLoad = true;\n    getSellTimes(1, tokenArr);\n  });\n};\n\n//已购买，删除\n// const getUserAllList = () => {\n//   getUserAll(common_store.address, data.page).then((res) => {\n//     data.loading = false;\n//     common_store.setLoading(false);\n//     const list = res.data.results;\n//     data.allList = data.allList.concat(list);\n//     data.finished = list.length < 20;\n//     const tokenArr = [];\n//     data.allList.forEach((item) => {\n//       tokenArr.push(item.tokenid);\n//     });\n//     data.allLoad = true;\n//     getSellTimes(3, tokenArr);\n//   });\n// };\n\nconst onLoad = () => {\n  if (data.finished) {\n    return;\n  }\n  data.page++;\n  data.loading = true;\n  getSellList();\n  // data.active == 1 ? getSellList() : getUserAllList();\n};\n\nonBeforeMount(() => {\n  common_store.initMarketWeb3();\n});\nwatchEffect(() => {\n  if (common_store.marketEmpower && common_store.address) {\n    common_store.setLoading(true);\n    data.active = 0;\n    getHoldList();\n  }\n});\nwatch(\n  () => data.active,\n  (val) => {\n    common_store.setLoading(true);\n    data.page = 0;\n    data.loading = true;\n    data.sellCounts = [];\n    data.allCounts = [];\n    data.counts = [];\n    data.countTime = [];\n    if (val == 0) {\n      data.holdList = [];\n      getHoldList();\n    } else if (val == 1) {\n      data.sellList = [];\n      getSellList();\n    }\n  }\n);\nconst toSell = async (id) => {\n  swapData.tokenid = id;\n  console.log(id);\n  try {\n    const res = await common_store.allMethods.getApproved(id).call();\n    data.empower = res == common_store.market_address;\n    swapData.hashType = 'sell';\n    swapData.alertShow = true;\n    swapData.finish = false;\n    swapData.success = false;\n    // if (res == common_store.market_address) {\n    //   sell();\n    // } else {\n    //   common_store.setEmpowerType(2, id);\n    //   common_store.showEmpower(true);\n    // }\n  } catch (error) {\n    console.log(error);\n    Toast(error);\n  }\n};\nconst empowerFn = async () => {\n  if (data.check) {\n    return;\n  }\n  data.check = true;\n  data.empowerText = 'EmpowerAlert.btn1';\n  try {\n    const res = await common_store.allMethods\n      .approve(common_store.market_address, swapData.tokenid)\n      .send({ from: common_store.address });\n    data.check = false;\n    data.empower = true;\n    data.empowerText = 'EmpowerAlert.btn2';\n  } catch (error) {\n    data.check = false;\n    data.empowerText = 'EmpowerAlert.btn2';\n    Toast(error);\n  }\n};\nconst sell = async () => {\n  if (data.check) {\n    return;\n  }\n  data.check = true;\n  try {\n    const sellRes = await common_store.marketMethods\n      .sell(swapData.tokenid)\n      .send({ from: common_store.address });\n    swapData.finish = true;\n    swapData.success = true;\n    data.check = false;\n    swapData.hash = sellRes.transactionHash;\n    common_store.addHash(swapData.hash, 1);\n  } catch (error) {\n    swapData.finish = true;\n    swapData.success = false;\n    data.check = false;\n    swapData.hash = error.message;\n  }\n};\nconst toCancel = async (id, tokenId) => {\n  swapData.hashType = 'cancel';\n  swapData.alertShow = true;\n  swapData.finish = false;\n  swapData.success = false;\n  swapData.tokenid = tokenId;\n  swapData.id = id;\n  data.empower = true;\n};\nconst cancel = async () => {\n  if (data.check) {\n    return;\n  }\n  data.check = true;\n  try {\n    const res = await common_store.marketMethods\n      .cancel(swapData.id)\n      .send({ from: common_store.address });\n    swapData.finish = true;\n    swapData.success = true;\n    swapData.hash = res.transactionHash;\n    data.check = false;\n    common_store.addHash(swapData.hash, 5);\n  } catch (error) {\n    swapData.finish = true;\n    swapData.success = false;\n    data.check = false;\n    swapData.hash = error.message;\n  }\n};\nconst closeFn = () => {\n  common_store.setLoading(true);\n  swapData.alertShow = false;\n  data.page = 0;\n  if (data.active == 0) {\n    data.holdList = [];\n    data.counts = [];\n    getHoldList();\n  } else {\n    data.sellCounts = [];\n    data.sellList = [];\n    getSellList();\n  }\n};\nconst submit = () => {\n  swapData.hashType == 'sell' ? sell() : cancel();\n};\n</script>\n<template>\n  <div class=\"mynft\">\n    <!-- <notice></notice> -->\n    <van-tabs\n      v-model:active=\"data.active\"\n      offset-top=\"20\"\n      title-active-color=\"#fff\"\n      title-inactive-color=\"#999999\"\n      animated\n    >\n      <van-tab :title=\"$t('NFT.tabs.one')\" title-active-color=\"#fff\">\n        <div class=\"record-tabs\">\n          <nft-list\n            :list=\"data.holdList\"\n            type=\"hold\"\n            :counts=\"data.counts\"\n            @toSell=\"toSell\"\n            :countTime=\"data.countTime\"\n          ></nft-list>\n          <no-record\n            v-if=\"data.holdList.length == 0 && !data.loading\"\n          ></no-record>\n        </div>\n      </van-tab>\n      <van-tab :title=\"$t('NFT.tabs.two')\">\n        <div class=\"record-tabs\">\n          <van-list\n            v-model:loading=\"data.loading\"\n            :finished=\"data.finished\"\n            :immediate-check=\"false\"\n            :loading-text=\"$t('loadingText')\"\n            @load=\"onLoad\"\n          >\n            <sell-list\n              :list=\"data.sellList\"\n              :counts=\"data.sellCounts\"\n              type=\"sell\"\n              @toCancel=\"toCancel\"\n              :countTime=\"data.countTime\"\n            ></sell-list>\n          </van-list>\n          <no-record\n            v-if=\"data.sellList.length == 0 && !data.loading\"\n          ></no-record>\n        </div>\n      </van-tab>\n      <!-- <van-tab :title=\"$t('NFT.tabs.three')\">\n        <div class=\"record-tabs\">\n          <van-list\n            v-model:loading=\"data.loading\"\n            :finished=\"data.finished\"\n            :immediate-check=\"false\"\n            :loading-text=\"$t('loadingText')\"\n            @load=\"onLoad\"\n          >\n            <nft-list\n              :list=\"data.allList\"\n              :counts=\"data.allCounts\"\n              type=\"hasBuy\"\n              :countTime=\"data.countTime\"\n            ></nft-list>\n          </van-list>\n          <no-record\n            v-if=\"data.allList.length == 0 && !data.loading\"\n          ></no-record>\n        </div>\n      </van-tab> -->\n    </van-tabs>\n  </div>\n  <van-popup v-model:show=\"swapData.alertShow\">\n    <swap-alert\n      :finish=\"swapData.finish\"\n      :success=\"swapData.success\"\n      :hash=\"swapData.hash\"\n      @closeFn=\"closeFn\"\n      :type=\"swapData.hashType\"\n      :empower=\"data.empower\"\n      :empowerText=\"data.empowerText\"\n      @empowerFn=\"empowerFn\"\n      :check=\"data.check\"\n      @submit=\"submit\"\n      :title=\"\n        swapData.hashType == 'sell' ? 'SwapAlert.title6' : 'SwapAlert.title2'\n      \"\n      :text=\"\n        swapData.hashType == 'sell'\n          ? 'SwapAlert.success3'\n          : 'SwapAlert.success2'\n      \"\n      :btn=\"swapData.hashType == 'sell' ? 'NFT.sell' : 'NFT.cancel'\"\n    >\n      <div>\n        <p class=\"font-Four\" v-if=\"swapData.hashType == 'sell'\">\n          {{\n            $t('NFT.type1', {\n              start: common_store.address.slice(0, 6),\n              end: common_store.address.slice(-4),\n              tokenId: swapData.tokenid,\n            })\n          }}\n        </p>\n        <p class=\"font-Four\" v-if=\"swapData.hashType == 'cancel'\">\n          {{\n            $t('NFT.type2', {\n              start: common_store.address.slice(0, 6),\n              end: common_store.address.slice(-4),\n              tokenId: swapData.tokenid,\n            })\n          }}\n        </p>\n      </div>\n    </swap-alert>\n  </van-popup>\n</template>\n\n<style lang=\"scss\" scoped>\n.mynft {\n  padding-top: 10px;\n}\n.record-tabs {\n  max-height: calc(100vh - 70px);\n  overflow-y: auto;\n}\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=628da430&lang=scss&scoped=true\"\n\nimport exportComponent from \"/data/repos/1_20230106200100/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-628da430\"]])\n\nexport default __exports__"],"names":["hash","toRefs","props","toClipboard","commonStore","useClipboard","__exports__","type","countTime","router","useRouter","toDetails","item","key","value","params","color","index","tokenid","tokenId","canvasid","type_","endDate","push","path","query","toSell","id","emit","toCancel","common_store","data","reactive","holdList","sellList","allList","active","counts","sellCounts","allCounts","loading","finished","page","empower","empowerText","check","swapData","alertShow","finish","success","hashType","getHoldList","async","allMethods","getUserPixel","address","call","setLoading","tokenArr","map","console","log","forEach","getSellTimes","error","num","res","marketMethods","listNftCount","concat","counts_","times_","getSellList","getUserSell","then","list","results","length","sellLoad","onLoad","onBeforeMount","initMarketWeb3","watchEffect","marketEmpower","watch","val","getApproved","market_address","empowerFn","approve","send","from","sell","sellRes","transactionHash","addHash","message","cancel","closeFn","submit"],"sourceRoot":""}